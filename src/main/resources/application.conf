logging {
  level = INFO

  # Log dead letters
  dead-letters = off

  # Log all LoggingFSMs for events, transitions and timers (using akka.actor.LoggingFSM[StateType, Data])
  fsm = off

  # Logging of message invocations on certain (local) actors (using akka.event.LoggingReceive)
  receive = off

  # Log unhandled actor messages
  unhandled = off

  # Log cluster informational messages
  cluster = off

  # Log all inbound and outbound messages to remote actors
  remote = off
}

spray.can.server {
  request-timeout = 1s
  ssl-encryption = off
}

akka {
  loglevel = ${logging.level}
  log-dead-letters = ${logging.dead-letters}
  
  log-dead-letters = 30
  log-dead-letters-during-shutdown = on

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    debug {
      fsm = ${logging.fsm}
      receive = ${logging.receive}
      unhandled = ${logging.unhandled}
    }
  }

  remote {
    log-remote-lifecycle-events = off
    log-sent-messages = ${logging.remote}
    log-received-messages = ${logging.remote}
    log-remote-lifecycle-events = ${logging.remote}
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  contrib.cluster.sharding {
    # The extension creates a top level actor with this name in top level system scope, e.g. '/system/sharding'
    guardian-name = sharding
    
    # ShardRegion actor is started in proxy only mode on nodes that are not tagged with this role.
    role = "backend"

    # The id of the dispatcher to use for ClusterSharding actors.
    # If not specified default dispatcher is used.
    # If specified you need to define the settings of the actual dispatcher.
    # This dispatcher for the entity actors is defined by the user provided
    # Props, i.e. this dispatcher is not used for the entity actors.
    use-dispatcher = ""
  }

  cluster {
    log-info = ${logging.cluster}
    
    roles = ["frontend", "backend"]
    seed-nodes = [ "akka.tcp://chat-system@127.0.0.1:2551" ]
    auto-down-unreachable-after = 10s
  }

  persistence {
    journal.plugin = "akka.persistence.journal.leveldb-shared"
    journal.leveldb-shared.store {
      # DO NOT USE 'native = off' IN PRODUCTION !!!
      native = off
      dir = "target/shared-journal"
    }
    snapshot-store.local.dir = "target/snapshots"
  }
}

messenger {
  host = "0.0.0.0"
  ports {
    http = 9692
    ws = 6696
  }
}

